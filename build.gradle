plugins {
  alias(libs.plugins.indra) apply false
  alias(libs.plugins.indra.pluginPublish) apply false
  alias(libs.plugins.gradlePluginPublish) apply false
  alias(libs.plugins.eclipseApt) apply false
  id "eclipse"
}

group = "net.kyori"
version = "2.1.2-SNAPSHOT"
description = "KyoriPowered organizational build standards and utilities"

subprojects {
  apply plugin: "java-gradle-plugin"
  apply plugin: "net.kyori.indra"
  apply plugin: "net.kyori.indra.license-header"
  apply plugin: "com.diffplug.eclipse.apt"
  
  dependencies {
    testImplementation libs.junit.api
    testImplementation libs.junit.params
    testRuntimeOnly libs.junit.engine
  }

  if (!project.findProperty('indra.skipPublishing')) {
    apply plugin: "com.gradle.plugin-publish"
    apply plugin: "net.kyori.indra.publishing.gradle-plugin"

    indraPluginPublishing {
      bundleTags("kyori", "standard")
      website("https://github.com/KyoriPowered/indra/wiki")
    }
  }

  if ('true' == project.findProperty("skipFunctionalTests")) {
    tasks.named('test') {
      useJUnitPlatform {
        excludeTags 'functional'
      }
    }
  }

  license {
    exclude { it.file.absolutePath.startsWith(project.file('src/test/resources').absolutePath) }
  }

  indra {
    github("KyoriPowered", "indra") {
      ci true
    }
    mitLicense()
    javaVersions().testWith(8, 11, 17)

    configurePublications {
      pom {
        organization {
          name = "KyoriPowered"
          url = "https://kyori.net"
        }

        developers {
          developer {
            id = "kashike"
            timezone = "America/Vancouver"
          }
          developer {
            id = "zml"
            email = "zml at kyori [.] net"
            timezone = "America/Vancouver"
          }
        }
      }

      versionMapping {
        usage(Usage.JAVA_API) { fromResolutionOf(JavaPlugin.RUNTIME_CLASSPATH_CONFIGURATION_NAME) }
        usage(Usage.JAVA_RUNTIME) { fromResolutionResult() }
      }
    }

    publishSnapshotsTo("stellardrift", "https://repo.stellardrift.ca/repository/snapshots/")
  }
}

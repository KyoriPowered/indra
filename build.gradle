plugins {
  alias(libs.plugins.indra) apply false
  alias(libs.plugins.indra.spotlessLicenser) apply false
  alias(libs.plugins.indra.pluginPublish) apply false
  alias(libs.plugins.gradlePluginPublish) apply false
  alias(libs.plugins.eclipseApt) apply false
  alias(libs.plugins.spotless)
  id "eclipse"
}

group = "net.kyori"
version = "3.1.2"
description = "KyoriPowered organizational build standards and utilities"

subprojects {
  apply plugin: "java-gradle-plugin"
  apply plugin: "net.kyori.indra"
  apply plugin: "net.kyori.indra.licenser.spotless"
  apply plugin: "com.diffplug.eclipse.apt"
  apply plugin: "com.diffplug.spotless"
  
  dependencies {
    testImplementation libs.junit.api
    testImplementation libs.junit.params
    testRuntimeOnly libs.junit.engine
  }

  if (!project.findProperty('indra.skipPublishing')) {
    apply plugin: "com.gradle.plugin-publish"
    apply plugin: "net.kyori.indra.publishing.gradle-plugin"

    indraPluginPublishing {
      bundleTags("kyori", "standard")
      website("https://github.com/KyoriPowered/indra/wiki")
    }
  }

  if ('true' == project.findProperty("skipFunctionalTests")) {
    tasks.named('test') {
      useJUnitPlatform {
        excludeTags 'functional'
      }
    }
  }

  indra {
    github("KyoriPowered", "indra") {
      ci true
    }
    mitLicense()
    javaVersions().testWith(11, 17, 20)

    signWithKeyFromPrefixedProperties("kyori")
    configurePublications {
      pom {
        organization {
          name = "KyoriPowered"
          url = "https://kyori.net"
        }

        developers {
          developer {
            id = "kashike"
            timezone = "America/Vancouver"
          }
          developer {
            id = "zml"
            email = "zml at kyori [.] net"
            timezone = "America/Vancouver"
          }
        }
      }
    }

    spotless { spot ->
      ratchetFrom "origin/main/3.x"

      java {
        targetExclude 'src/test/resources/**'
        formatAnnotations()
        removeUnusedImports()
      }
      ["java", "groovyGradle"].each {
        spot."$it" {
          importOrderFile rootProject.file('.spotless/kyori.importorder')
          trimTrailingWhitespace()
          endWithNewline()
          indentWithSpaces(2)
        }
      }
    }

    publishSnapshotsTo("stellardrift", "https://repo.stellardrift.ca/repository/snapshots/")
  }
}
